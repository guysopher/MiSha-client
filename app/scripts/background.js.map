{"version":3,"sources":["../scripts.babel/background.js"],"names":[],"mappings":"AAAA,YAAY;;;;;;;AAAC,AAQb,IAAI,GAAG,GAAG,gCAAgC,CAAC;;AAE3C,IAAI,EAAE,GAAG,SAAS,CAAC;;AAEnB,IAAI,MAAM,GAAG,EAAE,CAAC;AAChB,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,GAAG,EAAE;AACvD,MAAI,GAAG,CAAC,aAAa,EAAE;AACrB,UAAM,GAAG,GAAG,CAAC,aAAa,CAAC;AAC3B,WAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,MAAM,CAAC,CAAC;GAC/C;CACF,CAAC,CAAC;;AAGH,IAAI,YAAY,GAAG,SAAf,YAAY,CAAa,EAAE,EAAE;AAC/B,aAAW,CAAC,YAAU;AACpB,KAAC,CAAC,IAAI,CAAC,GAAG,GAAG,qBAAqB,GAAG,EAAE,CAAC,EAAE,EAAE,UAAS,GAAG,EAAE;AACxD,aAAO,CAAC,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;AACjC,aAAO,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;;AAE9B,UAAI,GAAG,CAAC,MAAM,EAAE;;;;;AAKd,cAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACjB,cAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAC,aAAa,EAAE,MAAM,EAAC,EAAE,UAAU,GAAG,EAAE,WAAW,EAAE;AAC5E,iBAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,WAAW,CAAC,CAAC;SACpD,CAAC,CAAC;;AAEH,cAAM,CAAC,aAAa,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,GAAG,EAAC,CAAC,CAAC;AAC/C,cAAM,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,EAAE;AAClC,cAAI,EAAE,OAAO;AACb,iBAAO,EAAE,qBAAqB;AAC9B,eAAK,EAAE,GAAG,CAAC,IAAI;AACf,iBAAO,EAAE,GAAG,CAAC,OAAO;AACpB,yBAAe,EAAE,mBAAmB;;SAErC,EAAE,UAAS,IAAI,EAAE;AAChB,iBAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;SAC5C,CAAC,CAAA;OACH;KACF,CAAC,CAAC;GACJ,EAAE,KAAK,CAAC,CAAC;CACX,CAAA;;AAED,IAAI,kBAAkB,GAAG,SAArB,kBAAkB,CAAY,KAAK,EAAE;AACvC,GAAC,CAAC,GAAG,CAAC,GAAG,GAAG,cAAc,GAAG,KAAK,EAAE,UAAU,GAAG,EAAE;AACjD,MAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACZ,WAAO,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AAC7B,UAAM,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACrC,gBAAY,CAAC,EAAE,CAAC,CAAC;GAClB,CAAC,CAAC;CACJ,CAAA;;AAGD,MAAM,CAAC,QAAQ,CAAC,kBAAkB,CAAC,UAAS,GAAG,EAAE;AAC/C,MAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AAClD,sBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;AAAC,GAoB/B;CACF,CAAC,CAAC","file":"background.js","sourcesContent":["'use strict';\n//\n//chrome.runtime\n//  .onInstalled.addListener(details => {\n//  console.log('previousVersion', details.previousVersion);\n//});\n\n\nvar api = 'http://misha-api.herokuapp.com';\n\nvar me = undefined;\n\nvar notifs = [];\nchrome.storage.local.get('notifications', function (res) {\n  if (res.notifications) {\n    notifs = res.notifications;\n    console.log('Get current messages: ', notifs);\n  }\n});\n\n\nvar initInterval = function (me) {\n  setInterval(function(){\n    $.post(api + '/user/seen?user_id=' + me.id, function(res) {\n      console.log(\"got response\", res);\n      console.count(\"got response\");\n\n      if (res.notify) {\n        //$.delete(api + '/pending/' + res.pending, function(res) {\n        //  console.log('Deleted: ', res);\n        //});\n\n        notifs.push(res);\n        chrome.storage.local.set({notifications: notifs}, function (err, localNotifs) {\n          console.log('Set current messages: ', localNotifs);\n        });\n\n        chrome.browserAction.setBadgeText({text: '1'});\n        chrome.notifications.create('temp', {\n          type: \"basic\",\n          iconUrl: \"images/icon-128.png\",\n          title: res.user,\n          message: res.message,\n          expandedMessage: \" Expanded message\"\n\n        }, function(data) {\n          console.log('Notification callback', data);\n        })\n      }\n    });\n  }, 12000);\n}\n\nvar getUserIdFromEmail = function(email) {\n  $.get(api + '/user?email=' + email, function (res) {\n    me = res[0];\n    console.log('Got User:', me);\n    chrome.storage.local.set({ me: me });\n    initInterval(me);\n  });\n}\n\n\nchrome.identity.getProfileUserInfo(function(res) {\n  if (res.email && res.email.indexOf('@wix.com') > 0) {\n    getUserIdFromEmail(res.email);\n    \n  //} else {\n  //  chrome.storage.local.get('me', function(res) {\n  //    if (res.me) {\n  //      initInterval(res.me);\n  //    } else {\n  //      chrome.identity.getAuthToken({ 'interactive': true }, function (token) {\n  //        //load Google's javascript client libraries\n  //\n  //        var x = new XMLHttpRequest();\n  //        x.open('GET', 'https://www.googleapis.com/oauth2/v1/userinfo?alt=json&access_token=' + token);\n  //        x.onload = function () {\n  //          var parsed_response = JSON.parse(x.response);\n  //          getUserIdFromEmail(parsed_response.email);\n  //        };\n  //        x.send();\n  //      });\n  //    }\n  //  });\n  }\n});\n"]}